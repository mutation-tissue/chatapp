<!DOCTYPE html>
<html>
  <head>
    <title>chatapp tutorial</title>
    <style>
      body {
        margin: 0;
        padding-bottom: 3rem;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
          Helvetica, Arial, sans-serif;
      }

      #form {
        background: #181818dc;
        padding: 0.25rem;
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        display: flex;
        height: 3rem;
        box-sizing: border-box;
        backdrop-filter: blur(10px);
      }
      #input {
        border: none;
        padding: 0 1rem;
        flex-grow: 1;
        margin: 0.25rem;
      }
      #input:focus {
        outline: none;
      }
      #form > button {
        background: #4e8357;
        border: none;
        padding: 0 1rem;
        margin: 0.25rem;
        border-radius: 1px;
        outline: none;
        color: #fff;
      }

      #messages {
        list-style-type: none;
        margin: 0;
        padding: 0;
      }
      #messages > li {
        padding: 0.5rem 1rem;
      }
      #messages > li:nth-child(odd) {
        background: #efefef;
      }
    </style>
  </head>
  <body>
    <ul id="messages">
      <% messages.forEach(function(message){%>
        <li>
          message : <%= message.message_text %>
        </li>
      <%});%>
    </ul>
    
    <form id="form" action="">
      <input id="input" autocomplete="off" /><button>Send</button>
    </form>
    <!-- クライアント側のHTMLファイル -->
    <h1>Chat Room</h1>
    <h1>simple chat</h1>
    <input id="inputText" type="text">
    <input id="sendButton" type="submit">
  <ul id="messageList">
  </ul>
  <!-- ライブラリの読み込み -->
  <script src="/socket.io/socket.io.js"></script>
  <script>
    // サーバーへ接続
    const socket = io();

    socket.emit('join room', "test");

    const clearText = () => {
      document.getElementById('inputText').value = '';
    }

    const addMessageList = (message) => {
      const ul = document.getElementById('messageList');
      const li = document.createElement('li');
      const text = document.createTextNode(message);
      li.appendChild(text);
      ul.appendChild(li);
    };
    
    // 送信ボタンのクリックイベントを検知
    document.getElementById('sendButton').addEventListener('click', () => {

      // inputに入力されたテキストを取得
      let inputMessage = document.getElementById('inputText').value;

      if (inputMessage === '') {
        return;
      }

      // 'sendMessage' イベントを発火、メッセージを送信
      socket.emit('room message', "test",inputMessage);

      // input 内のテキストを空にする
      clearText();
    });


    socket.on('receiveMessage', (message) => {
      // 受信したメッセージをulタグに挿入
      addMessageList(message);
    });
  </script>
  </body>
</html>