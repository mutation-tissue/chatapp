<!DOCTYPE html>
<html lang="ja">
  <head>
    <title>chatapp tutorial</title>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" type="text/css" href="/css/chat_style.css" /> 
  </head>
  <body>
    <p>ID: <%= room_id %> USER: <%= user.username %></p>
    <h1>Chat Room</h1>
    <h1>simple chat</h1>
    <div class ="scroll-container" id="scroll-container">
      <ul id="messages">
        <% messages.forEach(function(message){ %>
          <% if(message.user_id == user.user_id) { %>
            <li class = 'message self'>
              <%= message.username + ':' + message.message_text %>
            </li>
          <% } else { %>
            <li class = 'message other'>
              <%= message.username + ':' + message.message_text %>
            </li>
          <% } %>
        <%});%>
      </ul>
  </div>
      <input id = "inputText" name='message' type='text'>
      <input id='sendButton'type='submit'>


  <!-- ライブラリの読み込み -->
   
  <script src="/socket.io/socket.io.js"></script>
  <script>
      window.addEventListener('load', function() {
          var container = document.getElementById('scroll-container');
          container.scrollTop = container.scrollHeight;
      });
  </script>
  <script>
    // サーバーへ接続
const socket = io();

socket.emit('join room', '<%=room_id %>');

const clearText = () => {
  document.getElementById('inputText').value = '';
}

const addMessageList = (user_id,username,message) => {
  const ul = document.getElementById('messages');
  const li = document.createElement('li');
  const text = username + ":" +message;
  li.appendChild(document.createTextNode(text));

  li.classList.add('message');
      if (user_id === '<%=user.user_id %>') {
        li.classList.add('self');
      } else {
        li.classList.add('other');
      }
  ul.appendChild(li);
};


// 送信ボタンのクリックイベントを検知
document.getElementById('sendButton').addEventListener('click', () => {

  // inputに入力されたテキストを取得
  let inputMessage = document.getElementById('inputText').value;

  if (inputMessage === '') {
    return;
  }
  // 'sendMessage' イベントを発火、メッセージを送信
  socket.emit('room message', '<%=user.user_id%>','<%=room_id %>',inputMessage);

  // input 内のテキストを空にする
  clearText();
});


socket.on('receiveMessage', (user_id,username,message) => {
  // 受信したメッセージをulタグに挿入
  addMessageList(user_id,username,message);
});
  </script>
  </body>
</html>